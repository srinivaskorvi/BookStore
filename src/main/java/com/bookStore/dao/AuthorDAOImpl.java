package com.bookStore.dao;

import com.bookStore.model.Author;
import com.bookStore.model.AuthorExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class AuthorDAOImpl extends SqlMapClientDaoSupport implements AuthorDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public AuthorDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int countByExample(AuthorExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("author.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int deleteByExample(AuthorExample example) {
        int rows = getSqlMapClientTemplate().delete("author.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int deleteByPrimaryKey(String authorid) {
        Author key = new Author();
        key.setAuthorid(authorid);
        int rows = getSqlMapClientTemplate().delete("author.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public void insert(Author record) {
        getSqlMapClientTemplate().insert("author.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public void insertSelective(Author record) {
        getSqlMapClientTemplate().insert("author.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    @SuppressWarnings("unchecked")
    public List<Author> selectByExample(AuthorExample example) {
        List<Author> list = getSqlMapClientTemplate().queryForList("author.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public Author selectByPrimaryKey(String authorid) {
        Author key = new Author();
        key.setAuthorid(authorid);
        Author record = (Author) getSqlMapClientTemplate().queryForObject("author.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int updateByExampleSelective(Author record, AuthorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("author.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int updateByExample(Author record, AuthorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("author.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int updateByPrimaryKeySelective(Author record) {
        int rows = getSqlMapClientTemplate().update("author.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    public int updateByPrimaryKey(Author record) {
        int rows = getSqlMapClientTemplate().update("author.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table author
     *
     * @ibatorgenerated Fri May 15 17:14:21 PDT 2015
     */
    private static class UpdateByExampleParms extends AuthorExample {
        private Object record;

        public UpdateByExampleParms(Object record, AuthorExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}